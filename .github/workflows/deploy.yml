# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deployment

on:
  push:
    branches: [ master ]

jobs:
  versions:
    runs-on: ubuntu-latest
    outputs:
      last: ${{ steps.versions.outputs.last }}
      current: ${{ steps.versions.outputs.current }}
    steps:
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.15
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - run: |
          git checkout HEAD^
          echo "::set-output name=last::$(node -p 'require(`./package.json`).version')"
          git checkout master
          echo "::set-output name=current::$(node -p 'require(`./package.json`).version')" 
        id: versions
      - run: echo "${{steps.versions.outputs.last}},${{steps.versions.outputs.current}} "
      

  deploy:
    needs: versions
    if: ${{ needs.versions.outputs.last !=  needs.versions.outputs.current}}
    environment: ALI
    runs-on: ubuntu-latest
    env:
      DEPLOY_HOST_SINGAPORE : ${{ secrets.DEPLOY_HOST_SINGAPORE }}
      DEPLOY_HOST_CHINA: ${{ secrets.SERVER_HOST }}
      DEPLOY_USER: ${{ secrets.SERVER_USER }}
      
    steps:
    - run: sudo apt-get install -y sshpass
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.15
        cache: 'yarn'
    - run: yarn
    - name: deploy to ali cloud
      run: |
        export SSHPASS=${{ secrets.SERVER_PASS }}

        deploy() {
          local DEPLOY_HOST=$1
          sshpass -p "$SSHPASS" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST "rm -rf /data/qili/{deploy,lib,.yarn} 2>/dev/null"
          sshpass -e scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r deploy lib .yarn conf.js package.json index.js yarn.lock "$DEPLOY_USER@$DEPLOY_HOST:/data/qili"
          sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST "~/qili.travis.deploy.sh"
        }

        deploy $DEPLOY_HOST_CHINA
        deploy $DEPLOY_HOST_SINGAPORE